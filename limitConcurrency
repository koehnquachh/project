function limitConcurrency(tasks, limit) {
    let active = 0, index = 0;
    return new Promise(resolve => {
        const results = [];
        function next() {
            if (index >= tasks.length && active === 0) return resolve(results);
            if (active >= limit || index >= tasks.length) return;

            let taskIndex = index++;
            active++;
            tasks[taskIndex]().then(result => {
                results[taskIndex] = result;
                active--;
                next();
            });
            next();
        }
        next();
    });
}

const tasks = Array.from({ length: 10 }, (_, i) => 
    () => new Promise(res => setTimeout(() => res(`Task ${i} done`), Math.random() * 1000))
);

limitConcurrency(tasks, 3).then(console.log);
